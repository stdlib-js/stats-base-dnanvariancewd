{"version":3,"file":"index.mjs","sources":["../lib/ndarray.js","../lib/dnanvariancewd.js","../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Computes the variance of a double-precision floating-point strided array ignoring `NaN` values and using Welford's algorithm.\n*\n* ## References\n*\n* -   Welford, B. P. 1962. \"Note on a Method for Calculating Corrected Sums of Squares and Products.\" _Technometrics_ 4 (3). Taylor & Francis: 419–20. doi:[10.1080/00401706.1962.10490022](https://doi.org/10.1080/00401706.1962.10490022).\n* -   van Reeken, A. J. 1968. \"Letters to the Editor: Dealing with Neely's Algorithms.\" _Communications of the ACM_ 11 (3): 149–50. doi:[10.1145/362929.362961](https://doi.org/10.1145/362929.362961).\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} correction - degrees of freedom adjustment\n* @param {Float64Array} x - input array\n* @param {integer} strideX - stride length\n* @param {NonNegativeInteger} offsetX - starting index\n* @returns {number} variance\n*\n* @example\n* import Float64Array from '@stdlib/array-float64';\n*\n* var x = new Float64Array( [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0, NaN, NaN ] );\n*\n* var v = dnanvariancewd( 5, 1, x, 2, 1 );\n* // returns 6.25\n*/\nfunction dnanvariancewd( N, correction, x, strideX, offsetX ) {\n\tvar delta;\n\tvar mu;\n\tvar M2;\n\tvar ix;\n\tvar nc;\n\tvar v;\n\tvar n;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn NaN;\n\t}\n\tif ( N === 1 || strideX === 0 ) {\n\t\tv = x[ offsetX ];\n\t\tif ( v === v && N-correction > 0.0 ) {\n\t\t\treturn 0.0;\n\t\t}\n\t\treturn NaN;\n\t}\n\tix = offsetX;\n\tM2 = 0.0;\n\tmu = 0.0;\n\tn = 0;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tv = x[ ix ];\n\t\tif ( v === v ) {\n\t\t\tdelta = v - mu;\n\t\t\tn += 1;\n\t\t\tmu += delta / n;\n\t\t\tM2 += delta * ( v - mu );\n\t\t}\n\t\tix += strideX;\n\t}\n\tnc = n - correction;\n\tif ( nc <= 0.0 ) {\n\t\treturn NaN;\n\t}\n\treturn M2 / nc;\n}\n\n\n// EXPORTS //\n\nexport default dnanvariancewd;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport stride2offset from '@stdlib/strided-base-stride2offset';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\n/**\n* Computes the variance of a double-precision floating-point strided array ignoring `NaN` values and using Welford's algorithm.\n*\n* ## References\n*\n* -   Welford, B. P. 1962. \"Note on a Method for Calculating Corrected Sums of Squares and Products.\" _Technometrics_ 4 (3). Taylor & Francis: 419–20. doi:[10.1080/00401706.1962.10490022](https://doi.org/10.1080/00401706.1962.10490022).\n* -   van Reeken, A. J. 1968. \"Letters to the Editor: Dealing with Neely's Algorithms.\" _Communications of the ACM_ 11 (3): 149–50. doi:[10.1145/362929.362961](https://doi.org/10.1145/362929.362961).\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} correction - degrees of freedom adjustment\n* @param {Float64Array} x - input array\n* @param {integer} strideX - stride length\n* @returns {number} variance\n*\n* @example\n* import Float64Array from '@stdlib/array-float64';\n*\n* var x = new Float64Array( [ 1.0, -2.0, NaN, 2.0 ] );\n* var v = dnanvariancewd( x.length, 1, x, 1 );\n* // returns ~4.3333\n*/\nfunction dnanvariancewd( N, correction, x, strideX ) {\n\treturn ndarray( N, correction, x, strideX, stride2offset( N, strideX ) );\n}\n\n\n// EXPORTS //\n\nexport default dnanvariancewd;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport dnanvariancewd from './dnanvariancewd.js';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\nsetReadOnly( dnanvariancewd, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nexport default dnanvariancewd;\n"],"names":["dnanvariancewd","N","correction","x","strideX","offsetX","delta","mu","M2","ix","nc","v","n","i","NaN","ndarray","stride2offset","setReadOnly"],"mappings":";;6NA6CA,SAASA,EAAgBC,EAAGC,EAAYC,EAAGC,EAASC,GACnD,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEJ,GAAKZ,GAAK,EACT,OAAOa,IAER,GAAW,IAANb,GAAuB,IAAZG,EAEf,OADAO,EAAIR,EAAGE,KACIM,GAAKV,EAAEC,EAAa,EACvB,EAEDY,IAMR,IAJAL,EAAKJ,EACLG,EAAK,EACLD,EAAK,EACLK,EAAI,EACEC,EAAI,EAAGA,EAAIZ,EAAGY,KACnBF,EAAIR,EAAGM,KACIE,IAIVH,IAHAF,EAAQK,EAAIJ,IAGII,GADhBJ,GAAMD,GADNM,GAAK,MAINH,GAAML,EAGP,OADAM,EAAKE,EAAIV,IACE,EACHY,IAEDN,EAAKE,CACb,CCnCA,SAASV,EAAgBC,EAAGC,EAAYC,EAAGC,GAC1C,OAAOW,EAASd,EAAGC,EAAYC,EAAGC,EAASY,EAAef,EAAGG,GAC9D,CCtBAa,EAAAjB,EAAA,UAAAe"}